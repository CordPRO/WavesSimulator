//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLight;         // Offset:    0, size:   64
    PointLight gPointLight;             // Offset:   64, size:   80
    SpotLight gSpotLight;               // Offset:  144, size:   96
    float3  gEyePosW;                   // Offset:  240, size:   12
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gReflectViewProj;          // Offset:  192, size:   64
    float4  gClipPlane;                 // Offset:  256, size:   16
    Material gMaterial;                 // Offset:  272, size:   64
    bool    gUseStructBuf;              // Offset:  336, size:    4
    bool3   dummy;                      // Offset:  340, size:   12
}

//
// 6 local object(s)
//
StructuredBuffer gSolution;
Texture2D gDiffuseMap;
Texture2D gRefractiveMap;
Texture2D gReflectiveMap;
Texture2D gRefractionPositionMap;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 LightTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gReflectViewProj;         // Offset:  192 Size:    64
                //   float4 gClipPlane;                 // Offset:  256 Size:    16
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  272
                //       float4 Diffuse;                // Offset:  288
                //       float4 Specular;               // Offset:  304
                //       float4 Reflect;                // Offset:  320
                //
                //   } gMaterial;                       // Offset:  272 Size:    64 [unused]
                //   bool gUseStructBuf;                // Offset:  336 Size:     4
                //   bool3 dummy;                       // Offset:  340 Size:    12 [unused]
                //
                // }
                //
                // Resource bind info for gSolution
                // {
                //
                //   struct Solution
                //   {
                //       
                //       float4 Pos;                    // Offset:    0
                //       float4 Normal;                 // Offset:   16
                //       float4 Tangent;                // Offset:   32
                //
                //   } $Element;                        // Offset:    0 Size:    48
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // gSolution                         texture  struct         r/o    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // SV_VertexID              0   x           3   VERTID   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // SV_ClipDistance          0   x           6  CLIPDST  float   x   
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[22], immediateIndexed
                dcl_resource_structured t0, 48 
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input_sgv v3.x, vertex_id
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output_siv o6.x, clip_distance
                dcl_temps 3
                
                #line 76 "C:\Users\Admin\Documents\Visual Studio 2013\Projects\D3DS\LightningDemo\bin\Debug\FX\lighting.fx"
                if_nz cb0[21].x
                  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r0.xyz, v3.x, l(0), t0.xyzx  // gSolution<0,0,0>
                  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r1.xyz, v3.x, l(16), t0.xyzx  // gSolution<0,0,0>
                
                #line 76
                else 
                  mov r0.xyz, v0.xyzx  // vin<0,1,2>
                  mov r1.xyz, v1.xyzx  // vin<3,4,5>
                endif 
                
                #line 83
                mov r0.w, l(1.000000)
                dp4 r2.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r2.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r2.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                
                #line 86
                dp3 o2.x, r1.xyzx, cb0[4].xyzx  // VS<7:NaN:Inf>
                dp3 o2.y, r1.xyzx, cb0[5].xyzx  // VS<8:NaN:Inf>
                dp3 o2.z, r1.xyzx, cb0[6].xyzx  // VS<9:NaN:Inf>
                
                #line 89
                dp4 r1.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 93
                dp4 o5.x, r0.xyzw, cb0[12].xyzw  // VS<16:NaN:Inf>
                dp4 o5.y, r0.xyzw, cb0[13].xyzw  // VS<17:NaN:Inf>
                dp4 o5.z, r0.xyzw, cb0[14].xyzw  // VS<18:NaN:Inf>
                dp4 o5.w, r0.xyzw, cb0[15].xyzw  // VS<19:NaN:Inf>
                dp3 r0.x, r2.xyzx, cb0[16].xyzx
                add o6.x, r0.x, cb0[16].w  // VS<20:NaN:Inf>
                mov o0.xyzw, r1.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r1.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r2.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o3.xy, v2.xyxx  // VS<10,11>
                ret 
                // Approximately 29 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLight;                       // Offset:    0 Size:    64
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:   64
                //       float4 Diffuse;                // Offset:   80
                //       float4 Specular;               // Offset:   96
                //       float3 Position;               // Offset:  112
                //       float Range;                   // Offset:  124
                //       float3 Att;                    // Offset:  128
                //       float pad;                     // Offset:  140
                //
                //   } gPointLight;                     // Offset:   64 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  144
                //       float4 Diffuse;                // Offset:  160
                //       float4 Specular;               // Offset:  176
                //       float3 Position;               // Offset:  192
                //       float Range;                   // Offset:  204
                //       float3 Direction;              // Offset:  208
                //       float Spot;                    // Offset:  220
                //       float3 Att;                    // Offset:  224
                //       float pad;                     // Offset:  236
                //
                //   } gSpotLight;                      // Offset:  144 Size:    96
                //   float3 gEyePosW;                   // Offset:  240 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gReflectViewProj;         // Offset:  192 Size:    64 [unused]
                //   float4 gClipPlane;                 // Offset:  256 Size:    16 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  272
                //       float4 Diffuse;                // Offset:  288
                //       float4 Specular;               // Offset:  304
                //       float4 Reflect;                // Offset:  320
                //
                //   } gMaterial;                       // Offset:  272 Size:    64
                //   bool gUseStructBuf;                // Offset:  336 Size:     4 [unused]
                //   bool3 dummy;                       // Offset:  340 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gRefractiveMap                    texture  float4          2d    1        1
                // gReflectiveMap                    texture  float4          2d    2        1
                // gRefractionPositionMap            texture  float4          2d    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xy w
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                // SV_ClipDistance          0   x           6  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                // SV_TARGET                1   xyzw        1   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb1[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_output o1.xyzw
                dcl_temps 7
                
                #line 104 "C:\Users\Admin\Documents\Visual Studio 2013\Projects\D3DS\LightningDemo\bin\Debug\FX\lighting.fx"
                add r0.xyz, -v1.xyzx, cb0[15].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // toEyeW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90 "LightHelper.fx"
                add r1.xyz, -v1.xyzx, cb0[7].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 93
                dp3 r2.z, r1.xyzx, r1.xyzx
                sqrt r2.y, r2.z  // d<0:NaN:Inf>
                
                #line 100
                div r1.xyz, r1.xyzx, r2.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 102 "C:\Users\Admin\Documents\Visual Studio 2013\Projects\D3DS\LightningDemo\bin\Debug\FX\lighting.fx"
                dp3 r0.w, v2.xyzx, v2.xyzx
                rsq r0.w, r0.w
                mul r3.xyz, r0.wwww, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                dp3 r0.w, -r1.xyzx, r3.xyzx
                add r0.w, r0.w, r0.w
                mad r4.xyz, r3.xyzx, -r0.wwww, -r1.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108
                dp3 r0.w, r1.xyzx, r3.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 115
                dp3 r1.x, r4.xyzx, r0.xyzx
                max r1.x, r1.x, l(0.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, cb1[19].w
                exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                
                #line 118
                mul r1.xyz, r1.xxxx, cb1[19].xyzx
                mul r1.xyz, r1.xyzx, cb0[6].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 112
                lt r1.w, l(0.000000), r0.w
                
                #line 117
                mul r4.xyz, r0.wwww, cb1[18].xyzx
                mul r4.xyz, r4.xyzx, cb0[5].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 112
                and r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                and r1.xyz, r1.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 122
                mov r2.x, l(1.000000)
                dp3 r0.w, cb0[8].xyzx, r2.xyzx
                
                #line 100
                ge r1.w, cb0[7].w, r2.y
                
                #line 122
                div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w  // att<0:NaN:Inf>
                
                #line 125
                mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r2.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                and r2.xyz, r1.wwww, r2.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                and r1.xyz, r1.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 73
                dp3 r0.w, cb0[3].xyzx, r3.xyzx
                add r0.w, r0.w, r0.w
                mad r4.xyz, r3.xyzx, -r0.wwww, cb0[3].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r4.xyzx, r0.xyzx
                max r0.w, r0.w, l(0.000000)
                log r0.w, r0.w
                mul r0.w, r0.w, cb1[19].w
                exp r0.w, r0.w  // specFactor<0:NaN:Inf>
                
                #line 77
                mul r4.xyz, r0.wwww, cb1[19].xyzx
                mul r4.xyz, r4.xyzx, cb0[2].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 67
                dp3 r0.w, -cb0[3].xyzx, r3.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 71
                lt r2.w, l(0.000000), r0.w
                
                #line 76
                mul r5.xyz, r0.wwww, cb1[18].xyzx
                mul r5.xyz, r5.xyzx, cb0[1].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 71
                and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                and r4.xyz, r4.xyzx, r2.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 122 "C:\Users\Admin\Documents\Visual Studio 2013\Projects\D3DS\LightningDemo\bin\Debug\FX\lighting.fx"
                add r1.xyz, r1.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 137 "LightHelper.fx"
                add r4.xyz, -v1.xyzx, cb0[12].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 140
                dp3 r5.z, r4.xyzx, r4.xyzx
                sqrt r5.y, r5.z  // d<0:NaN:Inf>
                
                #line 147
                div r4.xyz, r4.xyzx, r5.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 161
                dp3 r0.w, -r4.xyzx, r3.xyzx
                add r0.w, r0.w, r0.w
                mad r6.xyz, r3.xyzx, -r0.wwww, -r4.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r6.xyzx, r0.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, cb1[19].w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                
                #line 165
                mul r0.xyz, r0.xxxx, cb1[19].xyzx
                mul r0.xyz, r0.xyzx, cb0[11].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                dp3 r0.w, r4.xyzx, r3.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 169
                dp3 r2.w, -r4.xyzx, cb0[13].xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, cb0[13].w
                exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 159
                lt r3.y, l(0.000000), r0.w
                
                #line 164
                mul r4.xyz, r0.wwww, cb1[18].xyzx
                mul r4.xyz, r4.xyzx, cb0[10].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 159
                and r4.xyz, r3.yyyy, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                and r0.xyz, r0.xyzx, r3.yyyy  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                mov r5.x, l(1.000000)
                dp3 r0.w, cb0[14].xyzx, r5.xyzx
                
                #line 147
                ge r3.y, cb0[12].w, r5.y
                
                #line 172
                div r0.w, r2.w, r0.w  // att<0:NaN:Inf>
                
                #line 176
                mul r0.xyz, r0.wwww, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 147
                and r4.xyz, r3.yyyy, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 126 "C:\Users\Admin\Documents\Visual Studio 2013\Projects\D3DS\LightningDemo\bin\Debug\FX\lighting.fx"
                add r2.xyz, r2.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 147 "LightHelper.fx"
                and r0.xyz, r0.xyzx, r3.yyyy  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127 "C:\Users\Admin\Documents\Visual Studio 2013\Projects\D3DS\LightningDemo\bin\Debug\FX\lighting.fx"
                add r0.xyz, r0.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 141
                div r0.w, v4.x, v4.w
                mad r1.x, r0.w, l(0.500000), l(0.500000)  // refCord<0:NaN:Inf>
                div r0.w, -v4.y, v4.w
                mad r1.y, r0.w, l(0.500000), l(0.500000)  // refCord<1:NaN:Inf>
                mad r1.xy, r3.xzxx, l(0.020000, 0.020000, 0.000000, 0.000000), r1.xyxx  // refCord<0:NaN:Inf,1:NaN:Inf>
                mul r3.xz, r3.xxzx, l(0.020000, 0.000000, 0.020000, 0.000000)
                
                #line 150
                sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t3.xzwy, s0  // refPosition<1:Inf>
                
                #line 146
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyxx, t1.xyzw, s0  // refColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 152
                mul r0.w, r0.w, r0.w
                mul r0.w, r0.w, l(0.001667)  // blendFactor<0:NaN:Inf>
                min r0.w, r0.w, l(1.000000)  // blendFactor<0:[0f,1f]>
                
                #line 147
                eq r1.x, r4.w, l(0.000000)
                movc r4.xyzw, r1.xxxx, l(1.000000,1.000000,1.000000,1.000000), r4.xyzw  // refColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 173
                add r5.xyzw, -r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                mad r4.xyzw, r0.wwww, r5.xyzw, r4.xyzw
                
                #line 161
                div r0.w, v5.x, v5.w
                mad r1.x, r0.w, l(0.500000), r3.x
                div r0.w, -v5.y, v5.w
                mad r1.y, r0.w, l(0.500000), r3.z
                add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // reflCord<0:NaN:Inf,1:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r1.xyxx, t2.xyzw, s0  // reflColor<0:Inf,1:Inf,2:Inf,3:Inf>
                eq r0.w, r5.w, l(0.000000)
                movc r5.xyzw, r0.wwww, l(1.000000,1.000000,1.000000,1.000000), r5.xyzw  // reflColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r6.xyzw, v3.xyxx, t0.xyzw, s0  // textColor<0:Inf,1:Inf,2:Inf,3:Inf>
                eq r0.w, r6.w, l(0.000000)
                movc r6.xyzw, r0.wwww, l(1.000000,1.000000,1.000000,1.000000), r6.xyzw  // textColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 173
                mul r5.xyzw, r5.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, cb1[20].xxxx  // textColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 150 "LightHelper.fx"
                mul r1.xyz, cb0[9].xyzx, cb1[17].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 174
                mul r1.xyz, r2.wwww, r1.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 147
                and r1.xyz, r1.xyzx, r3.yyyy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mul r3.xyz, cb0[4].xyzx, cb1[17].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 100
                and r3.xyz, r1.wwww, r3.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 120 "C:\Users\Admin\Documents\Visual Studio 2013\Projects\D3DS\LightningDemo\bin\Debug\FX\lighting.fx"
                mad r3.xyz, cb1[17].xyzx, cb0[0].xyzx, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 125
                add r1.xyz, r1.xyzx, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                add r1.xyz, r2.xyzx, r1.xyzx
                mad r2.xyz, r1.xyzx, r4.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r0.w, l(0.000000), r4.w
                movc o0.xyz, r0.wwww, r2.xyzx, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 190
                mov o0.w, cb1[18].w  // PS<3>
                mov o1.xyz, v1.xyzx  // PS<4,5,6>
                mov o1.w, l(1.000000)  // PS<7: 1f>
                ret 
                // Approximately 133 instruction slots used
                            
            };
        }

    }

}

